// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Your Name",
            "email": "your@email.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/albums": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crée un nouvel album avec un titre et un identifiant utilisateur",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Créer un album",
                "parameters": [
                    {
                        "description": "Données de l'album",
                        "name": "album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.CreateAlbumRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/proto.CreateAlbumResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/albums/type": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère un album privé ou principal selon le type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Obtenir un album par type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type d'album : 'private' ou 'main'",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.GetPrivateAlbumResponse"
                        }
                    },
                    "400": {
                        "description": "ID ou type invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Authorization manquante",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/albums/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère tous les albums appartenant à un utilisateur donné",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Obtenir les albums d'un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID utilisateur",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.GetAlbumsByUserResponse"
                        }
                    },
                    "400": {
                        "description": "ID utilisateur invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/albums/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Met à jour les informations d'un album",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Mettre à jour un album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'album",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mise à jour de l'album",
                        "name": "album",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.UpdateAlbumRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.UpdateAlbumResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Non autorisé",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Supprime un album par son ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Albums"
                ],
                "summary": "Supprimer un album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'album",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.DeleteAlbumResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid album ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Authorization header missing",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete album",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "Sends a reset password email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Forgot Password",
                "parameters": [
                    {
                        "description": "Email for password reset",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email successfully sent",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Forgot password failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/get-me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retourne les informations du profil de l'utilisateur authentifié",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Obtenir les informations de l'utilisateur connecté",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.GetMeResponse"
                        }
                    },
                    "401": {
                        "description": "Token manquant ou invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur interne",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/google": {
            "get": {
                "description": "Generates a Google login URL",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Google OAuth",
                "responses": {
                    "200": {
                        "description": "Google login URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to generate URL",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/google/callback": {
            "post": {
                "description": "Handles the OAuth callback after Google login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Google OAuth Callback",
                "parameters": [
                    {
                        "description": "Authorization code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.GoogleAuthCallbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login success and user info",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Google callback failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token returned",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Login failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logs the user out by invalidating the token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "description": "Token to invalidate",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Logout failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registers a new user and syncs with the gallery service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Registration failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Resets the user's password using a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Reset token and new password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Reset password failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/update-user": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Met à jour les informations d'un utilisateur (nom, prénom, email, photo)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Mettre à jour un utilisateur",
                "parameters": [
                    {
                        "description": "Champs à mettre à jour",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ajoute un fichier média à un album",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Ajouter un média",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'album",
                        "name": "album_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Fichier à uploader",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/proto.AddMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Erreur de parsing du formulaire",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/album/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Renvoie tous les médias appartenant à un album donné",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Récupérer les médias d’un album",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l’album",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.GetMediaByAlbumResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/private": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère les médias privés d’un utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Obtenir les médias privés",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID utilisateur",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.GetPrivateMediaResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/similar": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Détecte les fichiers médias similaires dans un album donné",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Détecter les médias similaires dans un album",
                "parameters": [
                    {
                        "description": "Requête de détection",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.DetectSimilarMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.DetectSimilarMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Récupère tous les médias appartenant à un utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Médias d’un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID utilisateur",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.GetMediaByUserResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Supprime un média si l'utilisateur est propriétaire",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Supprimer un média",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du média à supprimer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.DeleteMediaResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid media ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Authorization header missing",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete media",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/{id}/download": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Télécharge le contenu d’un fichier média",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Télécharger un média",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du média",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fichier binaire",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/{id}/private": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marque un média comme privé",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Rendre un média privé",
                "parameters": [
                    {
                        "description": "Données de la requête",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/proto.MarkAsPrivateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/proto.MarkAsPrivateResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "proto.AddMediaResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "proto.Album": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Media"
                    }
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "proto.CreateAlbumRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "proto.CreateAlbumResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "proto.DeleteAlbumResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "proto.DeleteMediaResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "proto.DetectSimilarMediaRequest": {
            "type": "object",
            "properties": {
                "album_id": {
                    "type": "integer"
                }
            }
        },
        "proto.DetectSimilarMediaResponse": {
            "type": "object",
            "properties": {
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Media"
                    }
                }
            }
        },
        "proto.ForgotPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "proto.GetAlbumsByUserResponse": {
            "type": "object",
            "properties": {
                "albums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Album"
                    }
                }
            }
        },
        "proto.GetMeResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "proto.GetMediaByAlbumResponse": {
            "type": "object",
            "properties": {
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Media"
                    }
                }
            }
        },
        "proto.GetMediaByUserResponse": {
            "type": "object",
            "properties": {
                "media_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Media"
                    }
                }
            }
        },
        "proto.GetPrivateAlbumResponse": {
            "type": "object",
            "properties": {
                "album": {
                    "$ref": "#/definitions/proto.Album"
                }
            }
        },
        "proto.GetPrivateMediaResponse": {
            "type": "object",
            "properties": {
                "media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/proto.Media"
                    }
                }
            }
        },
        "proto.GoogleAuthCallbackRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "proto.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "proto.LogoutRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "proto.MarkAsPrivateRequest": {
            "type": "object",
            "properties": {
                "media_id": {
                    "type": "integer"
                },
                "pin": {
                    "type": "string"
                }
            }
        },
        "proto.MarkAsPrivateResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "proto.Media": {
            "type": "object",
            "properties": {
                "album_id": {
                    "type": "integer"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "is_private": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "proto.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "proto.ResetPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "proto.UpdateAlbumRequest": {
            "type": "object",
            "properties": {
                "album_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "proto.UpdateAlbumResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "proto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "proto.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Format : Bearer \u003cvotre_token\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Bing Photo API Gateway",
	Description:      "This is the API Gateway for Bing Photo project.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
